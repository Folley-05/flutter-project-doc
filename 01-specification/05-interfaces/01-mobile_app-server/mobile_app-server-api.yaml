# SPDX-FileCopyrightText: 2025 Benoit Rolandeau <benoit.rolandeau@allcircuits.com>
#
# SPDX-License-Identifier: MIT

openapi: 3.0.3
info:
  title: ESAIP Lessons - Mobile App/Server - OpenAPI 3.0
  description: |-
    This is the description of the Http API interface between the Mobile APP and
    the app server.

    If you want to update the interface, please feel you free to do it.
  termsOfService: http://swagger.io/terms/
  contact:
    email: benoit.rolandeau@allcircuits.com
  license:
    name: MIT
    url: ../../../LICENSES/MIT.txt
  version: 1.0.0
externalDocs:
  description: Find out more about this interface
  url: ../README.md
servers:
  - url: https://localhost:3000/api/v1
tags:
  - name: Tests
    description: This section contains all the API used for testing the server
  - name: Things
    description: This section contains all the API used for managing the devices
paths:
  /hello:
    get:
      tags:
        - Tests
      summary: Send a Hello World message
      description: |-
        This method is used to test if you server is up and running
      responses:
        "200":
          description: successful operation
          content:
            text/plain: { example: "Hello, World!" }
        "500":
          description: A problem occurred on the server in the process
  /things:
    get:
      tags:
        - Things
      summary: Get the list of all the devices
      description: |-
        This method is used to get the list of all the devices
      parameters:
        - name: type
          in: query
          description: |-
            The type of the device you want to get, if you want to get anykind of devices
            you can use the value "all"
          required: false
          schema:
            type: string
            default: all
            enum:
              - temperature
              - yourSensor
              - all
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ThingsData"
        "400":
          description: The parameters sent are incorrect
        "500":
          description: A problem occurred on the server in the process

  /things/{serialNumber}/attributes:
    get:
      tags:
        - Things
      summary: Get the attributes linked to a thing
      description: |-
        This method is used to get the attributes linked to a thing.
      parameters:
        - name: serialNumber
          in: path
          description: The serial number of the thing you want to get the information from
          required: true
          schema:
            type: string
          example: CA-TS-00001
        - name: type
          in: query
          description: |-
            The type of the attributes you want to get, if you want to get anykind of attributes
            you can use the value "all"
          required: false
          schema:
            type: string
            default: all
            enum:
              - client
              - server
              - all
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributesData"
        "400":
          description: The parameters sent are incorrect
        "404":
          description: The thing doesn't exist
        "500":
          description: A problem occurred on the server in the process

    put:
      tags:
        - Things
      summary: Create or update server attributes linked to a thing
      description: |-
        This method is used to create or update the server attributes linked to a thing.

        If the attribute already exists, it will be updated with the new value. If the attribute
        doesn't exist, it will be created.
        If the attribute is a client attribute, the server will return an error.

        The request only returns the attributes that have been updated or created.
      parameters:
        - name: serialNumber
          in: path
          description: The serial number of the thing you want to update the information
          required: true
          schema:
            type: string
          example: CA-TS-00001
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributesData"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributesData"
        "400":
          description: The parameters sent are incorrect
        "404":
          description: The thing doesn't exist
        "500":
          description: A problem occurred on the server in the process

    delete:
      tags:
        - Things
      summary: Delete server attributes from the server
      description: |-
        This method is used to delete some server attributes linked to a thing.

        If the attribute is a client attribute, the server will return an error.
      parameters:
        - name: serialNumber
          in: path
          description: The serial number of the thing you want to update the information
          required: true
          schema:
            type: string
          example: CA-TS-00001
        - name: attributeKeys
          in: query
          description: The keys of the attributes to remove from the server
          required: true
          schema:
            type: array
            items:
              type: string
              description: The attribute key
            example: [tempUnit, tempValue]
      responses:
        "200":
          description: successful operation
        "400":
          description: The parameters sent are incorrect
        "404":
          description: The thing doesn't exist
        "500":
          description: A problem occurred on the server in the process

  /things/{serialNumber}/telemetry:
    get:
      tags:
        - Things
      summary: Get the current telemetry data linked to a thing
      description: |-
        This method is used to get the current telemetry data to the server.

        This only returns the current telemetry data, if you want to get the history of the
        telemetry data, you need to use the telemetry history API.
      parameters:
        - name: serialNumber
          in: path
          description: The serial number of the thing you want to update the information
          required: true
          schema:
            type: string
          example: CA-TS-00001
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TelemetryListData"
        "400":
          description: The parameters sent are incorrect
        "404":
          description: The thing doesn't exist
        "500":
          description: A problem occurred on the server in the process

  /things/{serialNumber}/telemetry/{key}:
    get:
      tags:
        - Things
      summary: Get the current the history of a telemetry data linked to a thing
      description: |-
        This method is used to get the history of a specific telemetry data linked to a thing.
      parameters:
        - name: serialNumber
          in: path
          description: The serial number of the thing you want to update the information
          required: true
          schema:
            type: string
          example: CA-TS-00001
        - name: key
          in: path
          description: This is the key of the telemetry data you want to get the history
          required: true
          schema:
            type: string
          example: tempValue
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TelemetryHistoryData"
        "400":
          description: The parameters sent are incorrect
        "404":
          description: The thing doesn't exist
        "500":
          description: A problem occurred on the server in the process

components:
  schemas:
    ThingsData:
      title: Things list
      type: array
      description: Contains all the Things connected to the server
      items:
        $ref: "#/components/schemas/ThingData"

    ThingData:
      title: Thing info
      type: object
      description: Contains the information of a thing
      properties:
        serialNumber:
          type: string
          description: The thing serial number, which is unique to the serial number
          example: CA-TEMP-SN-1234567890
        name:
          type: string
          description: The thing name
          example: MyTemperatureSensor
        type:
          type: string
          description: The things type
          enum:
            - temperature
            - yourThing
          example: temperature
      required:
        - id
        - name
        - type

    AttributeData:
      title: Attribute information
      type: object
      description: Contains the attribute information
      properties:
        lastUpdateTs:
          type: integer
          readOnly: true
          description: |-
            This is the timestamp of the last update of the attribute. The timestamp is in seconds
            from the Unix Epoch.
          example: 1616425200
        type:
          type: string
          description: The type of the attribute
          readOnly: true
          enum:
            - client
            - server
          example: client
        key:
          type: string
          description:
            The attribute Key. This key is unique to the thing. The uniqueness doesn't
            depend on the type of the attribute.
          example: tempUnit
        value:
          type: object
          description:
            The value of the attribute, could be a string, a number, a boolean, an
            integer, an array or an object.
          example: °C
      required:
        - lastUpdateTs
        - key
        - type
        - value

    AttributesData:
      title: Attributes list
      type: array
      description: Contains a list of attributes
      items:
        $ref: "#/components/schemas/AttributeData"

    AttributeKeysData:
      title: List of attribute keys
      type: array
      description: This is a list of attribute keys
      items:
        type: string
        description: The attribute key
      example: [tempUnit, tempValue]

    TelemetryData:
      title: Telemetry information
      type: object
      description: Contains the telemetry information
      properties:
        ts:
          type: integer
          readOnly: true
          description: |-
            This is the timestamp linked to the value. The timestamp is in seconds from the Unix
            Epoch.
          example: 1616425200
        key:
          type: string
          description: The telemetry Key
          example: tempUnit
        value:
          type: object
          description:
            The value of the telemetry element, could be a string, a number, a boolean, an
            integer, an array or an object.
          example: 17
      required:
        - ts
        - key
        - value

    TelemetryListData:
      title: This is the list of telemetry data
      type: array
      description: Contains a list of telemetry data
      items:
        $ref: "#/components/schemas/TelemetryData"

    TelemetryHistoryData:
      title: Telemetry information with history
      type: object
      description: Contains the history of one telemetry element
      properties:
        key:
          type: string
          description: The telemetry Key
          example: tempUnit
        history:
          type: array
          description: This is the history of the telemetry element
          items:
            type: object
            properties:
              ts:
                type: integer
                readOnly: true
                description: |-
                  This is the timestamp linked to the value. The timestamp is in seconds from the Unix
                  Epoch.
                example: 1616425200
              value:
                type: object
                description:
                  The value of the telemetry element, could be a string, a number, a boolean, an
                  integer, an array or an object.
                example: 17
      required:
        - ts
        - key
        - value
        - history
